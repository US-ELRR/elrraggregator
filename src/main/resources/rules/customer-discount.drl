import com.deloitte.elrr.drools.OrderRequest;
import com.deloitte.elrr.drools.CustomerType;
import function com.deloitte.elrr.drools.RulesFiredHelper.helper;

global com.deloitte.elrr.drools.OrderDiscount orderDiscount;
 
dialect "mvel"

rule "Age validation"
    when
        OrderRequest(age < 1 || age > 100)
    then
        System.out.println("==========Invalid age=============");
        helper(drools);
 end

rule "Age based discount"
    when
        OrderRequest(age >= 1 && < 20 || age > 50 && <= 100)
    then
        System.out.println("==========Adding 10% discount for Kids/ senior customer=============");
        orderDiscount.setDiscount(orderDiscount.getDiscount() + 10);
        helper(drools);
end
 
rule "Customer type based discount - Loyal customer"
    when
        OrderRequest(customerType.getValue == "LOYAL")
    then
        System.out.println("==========Adding 5% discount for LOYAL customer=============");
        orderDiscount.setDiscount(orderDiscount.getDiscount() + 5);
        helper(drools);
end
     
rule "Customer type based discount - others"
    when
        OrderRequest(customerType.getValue != "LOYAL")
    then
        System.out.println("==========Adding 3% discount for NEW or DISSATISFIED customer=============");
        orderDiscount.setDiscount(orderDiscount.getDiscount() + 3);
        helper(drools);
end
 
rule "Amount based discount"
    when
        OrderRequest(amount > 1000L)
    then
        System.out.println("==========Adding 5% discount for amount more than 1000$=============");
        orderDiscount.setDiscount(orderDiscount.getDiscount() + 5);
        helper(drools);
end