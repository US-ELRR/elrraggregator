import com.deloitte.elrr.elrrconsolidate.dto.UserCourse;

import java.lang.Exception

import java.util.Set;
import java.util.List;
import java.util.ArrayList;

import com.yetanalytics.xapi.model.Statement;
import com.yetanalytics.xapi.model.Agent;
import com.yetanalytics.xapi.model.Verb;
import com.yetanalytics.xapi.model.Activity;
import com.yetanalytics.xapi.model.ActivityDefinition;
import com.yetanalytics.xapi.model.LangMap;

import function com.deloitte.elrr.drools.RulesFiredHelper.helper;

global com.deloitte.elrr.entity.LearningRecord.java learningRecord;
global com.yetanalytics.xapi.model.Statement statement;
 
dialect "java"

rule "Create_LearningRecord_from_statement"
   when
       Statement (id != "")
   then
      System.out.println("==========Get learnerChange=============");
      helper(drools);
      
      try {
        
          // Parse xAPI Statement
          // Actor
          String actorName = "";
          String actorEmail = "";
    
          Agent actor = (Agent) statement.getActor();
    
          if (actor != null) {
            actorName = actor.getName();
            actorEmail = actor.getMbox();
          }
    
          // Verb
          String verbDisplay = "";
    
          Verb verb = statement.getVerb();
    
          if (verb != null) {
            verbDisplay = verb.getDisplay().get("en-us");
          }
    
          // Activity
          Activity object = (Activity) statement.getObject();
    
          // Activity name
          String activityName = "";
          String nameLangCode = "";
    
          ActivityDefinition activityDefenition = object.getDefinition();
          LangMap nameLangMap = activityDefenition.getName();
    
          if (nameLangMap != null) {
            Set<String> nameLangCodes = nameLangMap.getLanguageCodes();
            nameLangCode = nameLangCodes.iterator().next();
            activityName = activityDefenition.getName().get(nameLangCode);
          }
    
          // Activity Description
          String activityDescription = "";
          String langCode = "";
    
          LangMap descLangMap = activityDefenition.getDescription();
    
          if (descLangMap != null) {
            Set<String> descLangCodes = descLangMap.getLanguageCodes();
            langCode = descLangCodes.iterator().next();
            activityDescription = activityDefenition.getDescription().get(langCode);
          }
    
          List<UserCourse> userCourses = new ArrayList<>();
    
          // Use xAPI Statement values
          learnerChange.setContactEmailAddress(actorEmail);
          learnerChange.setName(actorName);
          UserCourse course = new UserCourse();
          course.setCourseId(activityName);
          course.setCourseName(activityDescription);
          course.setUserCourseStatus(verbDisplay);
          userCourses.add(course);
          learnerChange.setCourses(userCourses);
      
      } catch (Exception e) {
          System.out.println("Exception while firing Create_learnerChange_from_statement rule.");
      }

  end